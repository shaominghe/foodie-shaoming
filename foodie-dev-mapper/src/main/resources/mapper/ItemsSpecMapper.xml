<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.mapper.ItemsSpecMapper">
  <resultMap id="BaseResultMap" type="com.imooc.pojo.ItemsSpec">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="discounts" jdbcType="DECIMAL" property="discounts" />
    <result column="price_discount" jdbcType="INTEGER" property="priceDiscount" />
    <result column="price_normal" jdbcType="INTEGER" property="priceNormal" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, item_id, name, stock, discounts, price_discount, price_normal, created_time, 
    updated_time
  </sql>
  <select id="selectByExample" parameterType="com.imooc.pojo.ItemsSpecExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from items_spec
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from items_spec
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from items_spec
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.imooc.pojo.ItemsSpecExample">
    delete from items_spec
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.imooc.pojo.ItemsSpec">
    insert into items_spec (id, item_id, name, 
      stock, discounts, price_discount, 
      price_normal, created_time, updated_time
      )
    values (#{id,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{stock,jdbcType=INTEGER}, #{discounts,jdbcType=DECIMAL}, #{priceDiscount,jdbcType=INTEGER}, 
      #{priceNormal,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.imooc.pojo.ItemsSpec">
    insert into items_spec
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="discounts != null">
        discounts,
      </if>
      <if test="priceDiscount != null">
        price_discount,
      </if>
      <if test="priceNormal != null">
        price_normal,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="discounts != null">
        #{discounts,jdbcType=DECIMAL},
      </if>
      <if test="priceDiscount != null">
        #{priceDiscount,jdbcType=INTEGER},
      </if>
      <if test="priceNormal != null">
        #{priceNormal,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.imooc.pojo.ItemsSpecExample" resultType="java.lang.Integer">
    select count(*) from items_spec
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update items_spec
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.stock != null">
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.discounts != null">
        discounts = #{record.discounts,jdbcType=DECIMAL},
      </if>
      <if test="record.priceDiscount != null">
        price_discount = #{record.priceDiscount,jdbcType=INTEGER},
      </if>
      <if test="record.priceNormal != null">
        price_normal = #{record.priceNormal,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedTime != null">
        updated_time = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update items_spec
    set id = #{record.id,jdbcType=VARCHAR},
      item_id = #{record.itemId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      stock = #{record.stock,jdbcType=INTEGER},
      discounts = #{record.discounts,jdbcType=DECIMAL},
      price_discount = #{record.priceDiscount,jdbcType=INTEGER},
      price_normal = #{record.priceNormal,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{record.updatedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.imooc.pojo.ItemsSpec">
    update items_spec
    <set>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="discounts != null">
        discounts = #{discounts,jdbcType=DECIMAL},
      </if>
      <if test="priceDiscount != null">
        price_discount = #{priceDiscount,jdbcType=INTEGER},
      </if>
      <if test="priceNormal != null">
        price_normal = #{priceNormal,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.ItemsSpec">
    update items_spec
    set item_id = #{itemId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      discounts = #{discounts,jdbcType=DECIMAL},
      price_discount = #{priceDiscount,jdbcType=INTEGER},
      price_normal = #{priceNormal,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.ItemsSpec">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="discounts" jdbcType="DECIMAL" property="discounts" />
    <result column="price_discount" jdbcType="INTEGER" property="priceDiscount" />
    <result column="price_normal" jdbcType="INTEGER" property="priceNormal" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from items_spec
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.imooc.pojo.ItemsSpec">
    insert into items_spec (id, item_id, name, 
      stock, discounts, price_discount, 
      price_normal, created_time, updated_time
      )
    values (#{id,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{stock,jdbcType=INTEGER}, #{discounts,jdbcType=DECIMAL}, #{priceDiscount,jdbcType=INTEGER}, 
      #{priceNormal,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.ItemsSpec">
    update items_spec
    set item_id = #{itemId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      discounts = #{discounts,jdbcType=DECIMAL},
      price_discount = #{priceDiscount,jdbcType=INTEGER},
      price_normal = #{priceNormal,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, item_id, name, stock, discounts, price_discount, price_normal, created_time, 
    updated_time
    from items_spec
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, item_id, name, stock, discounts, price_discount, price_normal, created_time, 
    updated_time
    from items_spec
  </select>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.ItemsSpec">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="discounts" jdbcType="DECIMAL" property="discounts" />
    <result column="price_discount" jdbcType="INTEGER" property="priceDiscount" />
    <result column="price_normal" jdbcType="INTEGER" property="priceNormal" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from items_spec
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.imooc.pojo.ItemsSpec">
    insert into items_spec (id, item_id, name, 
      stock, discounts, price_discount, 
      price_normal, created_time, updated_time
      )
    values (#{id,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{stock,jdbcType=INTEGER}, #{discounts,jdbcType=DECIMAL}, #{priceDiscount,jdbcType=INTEGER}, 
      #{priceNormal,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.ItemsSpec">
    update items_spec
    set item_id = #{itemId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      discounts = #{discounts,jdbcType=DECIMAL},
      price_discount = #{priceDiscount,jdbcType=INTEGER},
      price_normal = #{priceNormal,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, item_id, name, stock, discounts, price_discount, price_normal, created_time, 
    updated_time
    from items_spec
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, item_id, name, stock, discounts, price_discount, price_normal, created_time, 
    updated_time
    from items_spec
  </select>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.ItemsSpec">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="discounts" jdbcType="DECIMAL" property="discounts" />
    <result column="price_discount" jdbcType="INTEGER" property="priceDiscount" />
    <result column="price_normal" jdbcType="INTEGER" property="priceNormal" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from items_spec
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.imooc.pojo.ItemsSpec">
    insert into items_spec (id, item_id, name, 
      stock, discounts, price_discount, 
      price_normal, created_time, updated_time
      )
    values (#{id,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{stock,jdbcType=INTEGER}, #{discounts,jdbcType=DECIMAL}, #{priceDiscount,jdbcType=INTEGER}, 
      #{priceNormal,jdbcType=INTEGER}, #{createdTime,jdbcType=TIMESTAMP}, #{updatedTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.ItemsSpec">
    update items_spec
    set item_id = #{itemId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      stock = #{stock,jdbcType=INTEGER},
      discounts = #{discounts,jdbcType=DECIMAL},
      price_discount = #{priceDiscount,jdbcType=INTEGER},
      price_normal = #{priceNormal,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, item_id, name, stock, discounts, price_discount, price_normal, created_time, 
    updated_time
    from items_spec
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, item_id, name, stock, discounts, price_discount, price_normal, created_time, 
    updated_time
    from items_spec
  </select>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.ItemsSpec">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="discounts" jdbcType="DECIMAL" property="discounts" />
    <result column="price_discount" jdbcType="INTEGER" property="priceDiscount" />
    <result column="price_normal" jdbcType="INTEGER" property="priceNormal" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.ItemsSpec">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="discounts" jdbcType="DECIMAL" property="discounts" />
    <result column="price_discount" jdbcType="INTEGER" property="priceDiscount" />
    <result column="price_normal" jdbcType="INTEGER" property="priceNormal" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.ItemsSpec">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="discounts" jdbcType="DECIMAL" property="discounts" />
    <result column="price_discount" jdbcType="INTEGER" property="priceDiscount" />
    <result column="price_normal" jdbcType="INTEGER" property="priceNormal" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime" />
  </resultMap>
</mapper>