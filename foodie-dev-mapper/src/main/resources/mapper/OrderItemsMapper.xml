<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.imooc.mapper.OrderItemsMapper">
  <resultMap id="BaseResultMap" type="com.imooc.pojo.OrderItems">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="item_img" jdbcType="VARCHAR" property="itemImg" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="item_spec_id" jdbcType="VARCHAR" property="itemSpecId" />
    <result column="item_spec_name" jdbcType="VARCHAR" property="itemSpecName" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="buy_counts" jdbcType="INTEGER" property="buyCounts" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_id, item_id, item_img, item_name, item_spec_id, item_spec_name, price, 
    buy_counts
  </sql>
  <select id="selectByExample" parameterType="com.imooc.pojo.OrderItemsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_items
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_items
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from order_items
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.imooc.pojo.OrderItemsExample">
    delete from order_items
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.imooc.pojo.OrderItems">
    insert into order_items (id, order_id, item_id, 
      item_img, item_name, item_spec_id, 
      item_spec_name, price, buy_counts
      )
    values (#{id,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR}, 
      #{itemImg,jdbcType=VARCHAR}, #{itemName,jdbcType=VARCHAR}, #{itemSpecId,jdbcType=VARCHAR}, 
      #{itemSpecName,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, #{buyCounts,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.imooc.pojo.OrderItems">
    insert into order_items
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="itemImg != null">
        item_img,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="itemSpecId != null">
        item_spec_id,
      </if>
      <if test="itemSpecName != null">
        item_spec_name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="buyCounts != null">
        buy_counts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=VARCHAR},
      </if>
      <if test="itemImg != null">
        #{itemImg,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemSpecId != null">
        #{itemSpecId,jdbcType=VARCHAR},
      </if>
      <if test="itemSpecName != null">
        #{itemSpecName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="buyCounts != null">
        #{buyCounts,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.imooc.pojo.OrderItemsExample" resultType="java.lang.Integer">
    select count(*) from order_items
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_items
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=VARCHAR},
      </if>
      <if test="record.itemImg != null">
        item_img = #{record.itemImg,jdbcType=VARCHAR},
      </if>
      <if test="record.itemName != null">
        item_name = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.itemSpecId != null">
        item_spec_id = #{record.itemSpecId,jdbcType=VARCHAR},
      </if>
      <if test="record.itemSpecName != null">
        item_spec_name = #{record.itemSpecName,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.buyCounts != null">
        buy_counts = #{record.buyCounts,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_items
    set id = #{record.id,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      item_id = #{record.itemId,jdbcType=VARCHAR},
      item_img = #{record.itemImg,jdbcType=VARCHAR},
      item_name = #{record.itemName,jdbcType=VARCHAR},
      item_spec_id = #{record.itemSpecId,jdbcType=VARCHAR},
      item_spec_name = #{record.itemSpecName,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      buy_counts = #{record.buyCounts,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.imooc.pojo.OrderItems">
    update order_items
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=VARCHAR},
      </if>
      <if test="itemImg != null">
        item_img = #{itemImg,jdbcType=VARCHAR},
      </if>
      <if test="itemName != null">
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="itemSpecId != null">
        item_spec_id = #{itemSpecId,jdbcType=VARCHAR},
      </if>
      <if test="itemSpecName != null">
        item_spec_name = #{itemSpecName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="buyCounts != null">
        buy_counts = #{buyCounts,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.OrderItems">
    update order_items
    set order_id = #{orderId,jdbcType=VARCHAR},
      item_id = #{itemId,jdbcType=VARCHAR},
      item_img = #{itemImg,jdbcType=VARCHAR},
      item_name = #{itemName,jdbcType=VARCHAR},
      item_spec_id = #{itemSpecId,jdbcType=VARCHAR},
      item_spec_name = #{itemSpecName,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      buy_counts = #{buyCounts,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.OrderItems">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="item_img" jdbcType="VARCHAR" property="itemImg" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="item_spec_id" jdbcType="VARCHAR" property="itemSpecId" />
    <result column="item_spec_name" jdbcType="VARCHAR" property="itemSpecName" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="buy_counts" jdbcType="INTEGER" property="buyCounts" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from order_items
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.imooc.pojo.OrderItems">
    insert into order_items (id, order_id, item_id, 
      item_img, item_name, item_spec_id, 
      item_spec_name, price, buy_counts
      )
    values (#{id,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR}, 
      #{itemImg,jdbcType=VARCHAR}, #{itemName,jdbcType=VARCHAR}, #{itemSpecId,jdbcType=VARCHAR}, 
      #{itemSpecName,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, #{buyCounts,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.OrderItems">
    update order_items
    set order_id = #{orderId,jdbcType=VARCHAR},
      item_id = #{itemId,jdbcType=VARCHAR},
      item_img = #{itemImg,jdbcType=VARCHAR},
      item_name = #{itemName,jdbcType=VARCHAR},
      item_spec_id = #{itemSpecId,jdbcType=VARCHAR},
      item_spec_name = #{itemSpecName,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      buy_counts = #{buyCounts,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, order_id, item_id, item_img, item_name, item_spec_id, item_spec_name, 
    price, buy_counts
    from order_items
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, order_id, item_id, item_img, item_name, item_spec_id, item_spec_name, 
    price, buy_counts
    from order_items
  </select>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.OrderItems">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="item_img" jdbcType="VARCHAR" property="itemImg" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="item_spec_id" jdbcType="VARCHAR" property="itemSpecId" />
    <result column="item_spec_name" jdbcType="VARCHAR" property="itemSpecName" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="buy_counts" jdbcType="INTEGER" property="buyCounts" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from order_items
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.imooc.pojo.OrderItems">
    insert into order_items (id, order_id, item_id, 
      item_img, item_name, item_spec_id, 
      item_spec_name, price, buy_counts
      )
    values (#{id,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR}, 
      #{itemImg,jdbcType=VARCHAR}, #{itemName,jdbcType=VARCHAR}, #{itemSpecId,jdbcType=VARCHAR}, 
      #{itemSpecName,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, #{buyCounts,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.OrderItems">
    update order_items
    set order_id = #{orderId,jdbcType=VARCHAR},
      item_id = #{itemId,jdbcType=VARCHAR},
      item_img = #{itemImg,jdbcType=VARCHAR},
      item_name = #{itemName,jdbcType=VARCHAR},
      item_spec_id = #{itemSpecId,jdbcType=VARCHAR},
      item_spec_name = #{itemSpecName,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      buy_counts = #{buyCounts,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, order_id, item_id, item_img, item_name, item_spec_id, item_spec_name, 
    price, buy_counts
    from order_items
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, order_id, item_id, item_img, item_name, item_spec_id, item_spec_name, 
    price, buy_counts
    from order_items
  </select>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.OrderItems">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="item_img" jdbcType="VARCHAR" property="itemImg" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="item_spec_id" jdbcType="VARCHAR" property="itemSpecId" />
    <result column="item_spec_name" jdbcType="VARCHAR" property="itemSpecName" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="buy_counts" jdbcType="INTEGER" property="buyCounts" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from order_items
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.imooc.pojo.OrderItems">
    insert into order_items (id, order_id, item_id, 
      item_img, item_name, item_spec_id, 
      item_spec_name, price, buy_counts
      )
    values (#{id,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR}, 
      #{itemImg,jdbcType=VARCHAR}, #{itemName,jdbcType=VARCHAR}, #{itemSpecId,jdbcType=VARCHAR}, 
      #{itemSpecName,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, #{buyCounts,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.imooc.pojo.OrderItems">
    update order_items
    set order_id = #{orderId,jdbcType=VARCHAR},
      item_id = #{itemId,jdbcType=VARCHAR},
      item_img = #{itemImg,jdbcType=VARCHAR},
      item_name = #{itemName,jdbcType=VARCHAR},
      item_spec_id = #{itemSpecId,jdbcType=VARCHAR},
      item_spec_name = #{itemSpecName,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      buy_counts = #{buyCounts,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, order_id, item_id, item_img, item_name, item_spec_id, item_spec_name, 
    price, buy_counts
    from order_items
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, order_id, item_id, item_img, item_name, item_spec_id, item_spec_name, 
    price, buy_counts
    from order_items
  </select>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.OrderItems">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="item_img" jdbcType="VARCHAR" property="itemImg" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="item_spec_id" jdbcType="VARCHAR" property="itemSpecId" />
    <result column="item_spec_name" jdbcType="VARCHAR" property="itemSpecName" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="buy_counts" jdbcType="INTEGER" property="buyCounts" />
  </resultMap>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.OrderItems">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="item_img" jdbcType="VARCHAR" property="itemImg" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="item_spec_id" jdbcType="VARCHAR" property="itemSpecId" />
    <result column="item_spec_name" jdbcType="VARCHAR" property="itemSpecName" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="buy_counts" jdbcType="INTEGER" property="buyCounts" />
  </resultMap>
  <resultMap id="BaseResultMap" type="com.imooc.pojo.OrderItems">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="item_id" jdbcType="VARCHAR" property="itemId" />
    <result column="item_img" jdbcType="VARCHAR" property="itemImg" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="item_spec_id" jdbcType="VARCHAR" property="itemSpecId" />
    <result column="item_spec_name" jdbcType="VARCHAR" property="itemSpecName" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="buy_counts" jdbcType="INTEGER" property="buyCounts" />
  </resultMap>
</mapper>